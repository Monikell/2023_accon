#prepare example files
data(leafdata)
tf <- paste(tempdir(), "/", sep = "")
for (i in 1:7){
write.table(leafdata[[i]],paste(tf,names(leafdata)[i],sep=""),sep="\t")
}
(list.files(tf))
#prepare example files
data(leafdata)
unlink(list.files(tf))
source("~/.active-rstudio-document", echo=TRUE)
leafdata <- C:\Users\monik\Documents\C_Reserach\fieldwork_summer_2023\data\sla\arch\arch_all_renamed
students <- c("Steve", "Elsa", "Rich", "Courtney")
students
[students]
length(students)
kids <- data.frame(first_name = c("Steven", "Elsa", "Rich", "Courtney"),
age = c(13, 15, 14, 15))
kids
kids_xage <- data.frame(first_name = c("Steven", "Elsa", "Rich", "Courtney"),
age = c(13, 15, 14, 15, 16))
kids
kids$age
kids$age
kids$first_name
kids[1,2]
kids[1,]
kids[,2]
kids[,1]
kids[ ,1] # Isolate first column
kids[1, ]
kids2 <- data.frame(first_name = students,
age = c(13, 15, 14, 28))
kids2
# Select the name "Elsa"
kids$first_name[2]
kids
## what if we have a huge dataset?
kids$first_name[kids$first_name == "Elsa"]
kids$first_name == "Elsa"
#want this in the homework too!
kids$grades <- c(67, 99, 79, 84)
kids
hobby <- c("reading", "drawing", "horse back", "cars")
kids <- cbind(kids, hobby)
kids
ashley <- data.frame(who = "Ashley", age = 15, grade = 70, fun = "skate")
names(ashley)
names(kids)
rbind(kids, ashley)
ashley2 <- (who = "Ashley", age = 15, grade = 70, hobby = "skate")
names(ashley) <- names(kids)
ashley
rbind(kids, ashley)
kids
kids <- rbind(kids, ashley)
kids
setwd("C:/Users/monik/Documents/reserach/fieldwork_summer_2023/data/2_processing/isotope_weight_values/try_requesteddata")
trysp <- read.delim2(file = "TryAccSpecies.txt", header = TRUE)
getwd()
try.data <- read.csv(file = "TryAccspecies.csv")
install.packages("reshape2")
library(reshape2)
head(try.data)
test <- melt(try.data), id = AccSpeciesID)
test <- melt(try.data), id = "AccSpeciesID")
test <- melt(try.data), id = "AccSpeciesID")
test <- melt(try.data, id = "AccSpeciesID")
View(test)
View(try.data)
aggregate(.~AccSpeciesID, data = try.data, max, na.rm = TRUE,
na.action = NULL)
library(tidyr)
test <- pivot_wider(try.data, names_from = AccSpeciesID, values_from = DataName)
test
View(test)
library("tidyverse")
install.packages("tidyverse")
library("dplyr")
install.packages("dplyr")
try.data %>% filter(
DataName == "Longitude" | DataName == "Latitude" |
DataName == "Leaf nitrogen content per dry mass (Nmass)" |
DataName == "Leaf carbon content per dry mass"
)
try.data %>%
filter(
DataName == "Longitude" |
DataName == "Latitude" |
DataName == "Leaf nitrogen content per dry mass (Nmass)" |
DataName == "Leaf carbon content per dry mass"
)
library(dplyr)
try.data %>%
filter(
DataName == "Longitude" |
DataName == "Latitude" |
DataName == "Leaf nitrogen content per dry mass (Nmass)" |
DataName == "Leaf carbon content per dry mass"
)
trydata_ofintrest <- try.data %>%
filter(
DataName == "Longitude" |
DataName == "Latitude" |
DataName == "Leaf nitrogen content per dry mass (Nmass)" |
DataName == "Leaf carbon content per dry mass"
)
View(trydata_ofintrest)
# Writing the isolated data frame to a csv
write.csv(trydata_ofintrest, file = "try_cleaned_dataofintrest.csv",
row.names = FALSE)
summary_data <- your_data %>%
group_by(AccSpeciesID, ObservationID) %>%
summarize(
MeanLeafNitrogen = mean(OrigValueStr[TraitName == "Leaf nitrogen (N) content per leaf dry mass"], na.rm = TRUE),
MeanLeafCarbon = mean(OrigValueStr[TraitName == "Leaf carbon (C) content per leaf dry mass"], na.rm = TRUE),
MeanLatitude = mean(OrigValueStr[OriglName == "Lat"], na.rm = TRUE),
MeanLongitude = mean(OrigValueStr[OriglName == "Long"], na.rm = TRUE)
)
summary_data <- trydata_ofintrest %>%
group_by(AccSpeciesID, ObservationID) %>%
summarize(
MeanLeafNitrogen = mean(OrigValueStr[TraitName == "Leaf nitrogen (N) content per leaf dry mass"], na.rm = TRUE),
MeanLeafCarbon = mean(OrigValueStr[TraitName == "Leaf carbon (C) content per leaf dry mass"], na.rm = TRUE),
MeanLatitude = mean(OrigValueStr[OriglName == "Lat"], na.rm = TRUE),
MeanLongitude = mean(OrigValueStr[OriglName == "Long"], na.rm = TRUE)
)
View(try.data)
unique(try.data, "SpeciesName")
unique(try.data$SpeciesName)
count(unique(try.data$SpeciesName))
length(unique(try.data$SpeciesName))
length(unique(try.data$SpeciesName))
length(unique(trydata_ofintrest$SpeciesName))
pivot(trydata_ofintrest, trydata_ofintrest$AccSpeciesID,
trydata_ofintrest$TraitName)
library(tidyr)
library(dplyr)
# Identify and create unique IDs for each group of related rows
datatest <- trydata_ofintrest %>%
mutate(GroupID = cumsum(!is.na(Latitude) | !is.na(Longitude)))
View(trydata_ofintrest)
# Identify and create unique IDs for each group of related rows
datatest <- trydata_ofintrest %>%
mutate(DataName = cumsum(!is.na(Latitude) | !is.na(Longitude)))
